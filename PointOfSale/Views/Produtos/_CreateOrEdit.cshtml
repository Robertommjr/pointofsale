@model PointOfSale.ViewModels.Produto.ProdutoViewModel


@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    @Html.LabelFor(model => model.CategoriaId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="select">
            @Html.DropDownListFor(p => p.CategoriaId, Model.Categorias.Select(option => new SelectListItem
               {
                   Text = option.Text,
                   Value = option.Value,
                   Selected = (Model != null) && (option.Value == Model.CategoriaId.ToString())
               }), "Selecione a categoria", new { @id = "ddlCategoria", @SortDirection = "ASC", @sort = "true", @class = "form-control" })
        </div>
        @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Preço, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Preço, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Preço, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-default" />
    </div>
</div>